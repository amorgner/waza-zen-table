<html>
<head>
    <title>Sand Drawing - Heroku Waza Zen Table</title>
    <script src="/assets/javascripts/jquery-1.8.1.min.js"></script>
    <script src="/assets/javascripts/touch.js"></script>
	<style type="text/css" media="screen">
	    body {
	        width : 100%;
	        height: 100%;
	        margin: 0px;
	        padding: 30px;
			background: url("/assets/img/background.jpg") repeat;
	    }
	    #id {
	        background: url("/assets/img/sand.gif") repeat; 
	        margin: 0px;
	    }
	    .pen {
	        position:absolute;
	        z-index:1;
	        background-color: brown;
	        width:10px;
	        height:10px;
	    }
		.button {
	        position:absolute;
	        z-index:1;
			top:5px;
			color: black;
			font-weight: bold;
			font-family: Sans-Serif;
	        background: url("/assets/img/button_wood.png"); 
			display: inline-block;
			text-align:center;
			vertical-align:middle;
			background-repeat:no-repeat;
			padding-left:5px;
			padding-right:5px;
			height:31px;
			max-height: 31px;
			background-size: cover;
			min-width:104px;
		}
	    #live {
			left:5px;
	    }
	    #btnCode {
			left:200px;
	    }
	    #btnPlayer {
			left:300px;
	    }
		#btnRun {
			position: relative;
		}
		.inactive {
			background: url("/assets/img/button_wood.png"); 
		}
	    .active {
	        background-color:red;
	    }   
		#btnSend {
			position: relative;
		}
	    #code {
		    z-index:1;
			width:460;
			height:400;
			position: absolute;
			right: 10px;
			top: 295px;
			background: 'transparent';
			text-align:center;
	    }                           
	    textarea {
		    z-index:2;
			display:block;
			background: url("/assets/img/sand.gif") repeat; 
			width:460;
			height:200;
	    }                                               Â 
	</style>

	</head>
	    <body>
	        <!--style="min-width:1375;min-height:1030px;"-->
	        <% if ( bambuser_video ) { %>
	            <div id="player" class="popup"><iframe src="http://embed.bambuser.com/broadcast/<%= bambuser_video %>?autoplay=1&amp;mute=1" 
	             width="460" height="310" frameborder="0" style="position:absolute;top:10px;right:10px;"></iframe></div>
	        <% } %>
	        <div id="code" class="popup">
	        	<textarea id="editor" cols="120">		
	Home();
	MoveTo(center.x-10,center.y-10);
	LineTo(center.x-10,center.y+10);
	LineTo(center.x+10,center.y+10);
	LineTo(center.x+10,center.y-10);
	LineTo(center.x-10,center.y-10);	

	var r=100;
	for (var a=0;a<=4*2*Math.PI;a+=Math.PI/20) {
	   var x=Math.cos(a)*r+center.x;
	   var y=Math.sin(a)*r+center.y;   
	   if (a==0) MoveTo(x,y); else LineTo(x,y);
	   r-=0.5;
	}
	        	</textarea>
				<input type="checkbox" id="chkInvert"/> Invert
				<div class="button"  id="btnRun">Run</div>
				<div class="button"  id="btnSend" class="inactive">Send</div>
	        	<textarea id="result"  cols="120">
	        	</textarea>
	        </div>
	        <canvas id="id" width="1375" height="1030" ></canvas>
	        <div class="button"  id="live">Live</div>
	        <div class="button"  id="btnCode">Show/Hide Code Console</div>
	        <div class="button"  id="btnPlayer">Show/Hide Live-Stream</div>
	    </body>

<script type="text/javascript" charset="utf-8">
// Zen Desktop [270mm x 206mm]
// Zen Coffee Table 1063mm x 629
    var table=<%- JSON.stringify(table_size) %>
    var zoom,size;
    var context;
    var session;
    var active;
	var lines=[];
    $(document).ready(function() {

		registerInputEvents($("#id"));
	var redraw = function() {};
	
	function checkMakeActive(activeSession) {
        if (session == activeSession) {
		    if (active != activeSession) {
	            $("#live").addClass("active").text("Live: " + activeSession);
				$("#btnSend").removeClass("inactive");
				console.log("resetLines","checkMakeActive");
				lines=[];
				redraw.call();
		    }
        } else {
            $("#live").addClass("inactive").text("Live: " + activeSession + " ( Me: " + session + ")");
        }
        active = activeSession;
	}
    function checkStatus() {
        $.ajax("/session/" + session, {
            dataType: 'json',
            type: "PUT",
            success: function(res) {
                //console.log("checkStatus",res);
				checkMakeActive(res.active);
            }
        })
    };
        
    function newSession() {
      $.ajax("/session",{dataType:'json',type:"PUT", success:function(res) {
        console.log("newSession",res);
        session=res.id;
		checkMakeActive(res.active);
      }});
    }

    function handleResize() {
      size={w:$(window).width()*.85,h:$(window).height()*.85}
      $("#id").attr("width", size.w).attr("height",size.h);
      zoom=Math.max(table.width/size.w, table.height/size.h)
      $("#id").attr("width", table.width/zoom).attr("height",table.height/zoom);
      context=initContext('id');
	  redraw.call();
      console.log(zoom,size.w,size.h);
    } 

    
    function log(name) {
        //console.log(name,drag.length,drag.pageX,drag.pageY,drag);
    }
    function initContext(id) {
        var canvas = document.getElementById(id);
        var context = canvas.getContext('2d');
              var grd = context.createRadialGradient(0, 0, 3, 0, 0, 10);
              grd.addColorStop(0, 'rgba(128,128,128,0.5)');
              grd.addColorStop(1, 'rgba(128,128,128,0.25)');
              context.strokeStyle = grd;
              context.lineWidth = 15;
              context.lineCap = 'butt';
    //        context.lineCap = 'round';
    //    context.strokeStyle = 'rgba(255,255,255,0.2)';
        return context;
    }

    var drag=null;
    context=initContext('id')
    newSession();
    $("#live").click(newSession)
    setInterval(checkStatus,10000);
    $(window).resize(handleResize);
    handleResize();

    function line(x,y,x2,y2) {
        console.log("line",x,y,x2,y2,zoom);
        context.beginPath();
        context.moveTo(x/zoom, y/zoom);
        context.lineTo(x2/zoom, y2/zoom);
        context.stroke();
    }

	var pos={x:0,y:0};

	function drawAction(action) {
		if (action["action"]=="home") pos={x:action['x']||0,y:action['y']||0};
		else if (action["action"]=="move") pos={x:action['x'],y:action['y']};
		else if (action["action"]=="line") {
			line(pos.x,pos.y,action['x'],action['y']);
			pos={x:action['x'],y:action['y']};
		}
	}

    redraw = function() {
		context.clearRect(0,0,$("window").width,$("window").height);
		pos={x:0,y:0};
		for (var i=0;i<lines.length;i++) {
			drawAction(lines[i]);
		}
	}

    function update(event) {
        if (drag==null) {
            drag={startX:event.pageX,startY:event.pageY};
        }
        drag.pageX=event.pageX;
        drag.pageY=event.pageY;
        drag.deltaX=event.pageX-drag.startX;
        drag.deltaY=event.pageY-drag.startY;
        drag.length=Math.sqrt(drag.deltaX*drag.deltaX+drag.deltaY*drag.deltaY);
    }

	function sendActions(actions) {
		$.ajax("/session/"+session, {
            type : "POST",
            dataType: "json",
            contentType: "application/json",
            processData: false,
            data: JSON.stringify(actions),
            success: function(res) {
                //console.log("Res of "+action,res)
            },
            error: function(xhr,status,err) {
                console.log("Error of "+actions,err,status)
            }
        })
	}
    function send (action,x,y) {
        var cx=zoom*x;
        var cy=zoom*y;
        var action={action:action,x:cx,y:cy};
		lines.push(action);
		drawAction(action);
		sendActions([action]);
    }

    $( "#id" ).on( TouchMouseEvent.DOWN,  function(event) {
        if (active!=session) return;
        event.preventDefault();
        update(event);
        log("down");
        send("move",drag.startX,drag.startY);
    });
    
    $( "#id" ).on( TouchMouseEvent.MOVE,  function(event) {
        if (active!=session) return;
        event.preventDefault();
        if (drag) {
            update(event);
            // call callback, when delta 
            // $("<div class='pen'></div>").appendTo($('#id')).css({top:drag.pageY,left:drag.pageX})
            if (drag.length>20) {
                //console.log(drag)
                send("line",drag.pageX,drag.pageY);
                log("move");
                drag=null;
                update(event);
            }
        } else {
//          console.log("move")
        }
    });
    $("#id").on(TouchMouseEvent.UP, function(event) {
        if (active!=session) return;
        event.preventDefault();
        // call callback
        log("up");
        drag=null;
    }); 

	function run() {
		var flipY = function(y) { return y; };
		var min={x:0,y:0};
		var max={x:table.width,y:table.height};
		var center={x:table.width/2,y:table.height/2};
		function Home() { program.push({action:"home", x:0, y:flipY(0)})};
		function LineTo(x,y) { program.push({action:"line",x:x,y:flipY(y)})};
		function MoveTo(x,y) { program.push({action:"move",x:x,y:flipY(y)})};
		function Clear() { program = []; };
		function NoOp() {}
		var Robot = { Home : Home, LineTo : LineTo, MoveTo : MoveTo, centerX : center.x, centerY : center.y, LineToSmooth : LineTo, WaitMinutes : NoOp, WaitSeconds: NoOp };
		var text=$("#editor").val();
		var program=[];
		if ($("#chkInvert").attr("checked")) flipY = function(y) { return table.height - y; }
		eval(text);
		$("#result").val(program.map(JSON.stringify).join("\n"));
		lines=program;
		handleResize();
	}
	$("#btnCode").click(function() { $("#code").toggle(); })
	$("#btnPlayer").click(function() { $("#player").toggle(); })
	$("#btnRun").click(run)
	$("#btnSend").click(function() { sendActions(lines); })

    });
</script>
</html>

